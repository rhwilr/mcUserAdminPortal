var app=angular.module("mcUAP",["ngResource","ui.bootstrap","ui.router.tabs","ui.router"]).config(["$interpolateProvider",function(e){e.startSymbol("[["),e.endSymbol("]]")}]);app.factory("ServersApi",["$resource",function(e){return e("/api/v1/server",{},{query:{method:"GET",isArray:!1}})}]),app.controller("AdminCtrl",["$scope",function(e){e.tabData=[{heading:"Servers",route:"servers"},{heading:"Subscriptions",route:"subscriptions"},{heading:"Users",route:"users"},{heading:"Roles",route:"roles"}]}]).config(["$stateProvider","$urlRouterProvider",function(e,r){r.otherwise("/servers"),e.state("servers",{url:"/servers",templateUrl:"partials/admin/servers.html"}).state("subscriptions",{url:"/subscriptions",templateUrl:"partials/admin/subscriptions.html"}).state("users",{url:"/users",templateUrl:"partials/admin/users.html"}).state("roles",{url:"/roles",templateUrl:"partials/admin/roles.html"})}]),app.controller("ServerIndexCtrl",["$scope","$modal","ServersApi",function(e,r,t){t.query(function(r){console.log(r.data),e.servers=r.data}),e.data={servername:"testing..."},e.open=function(){console.log(e.data);var t=r.open({templateUrl:"AddServerModal.html",controller:"ModalInstanceCtrl",resolve:{data:function(){return e.data}}});t.result.then(function(e){console.log(e)},function(){console.log("Modal dismissed at: "+new Date)})}}]),app.controller("ModalInstanceCtrl",["$scope","$modalInstance","data",function(e,r,t){e.data=t,e.ok=function(){r.close(e.data)},e.cancel=function(){r.dismiss("cancel")}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsIlNlcnZpY2VzL1NlcnZlclNlcnZpY2UuanMiLCJDb250cm9sbGVycy9BZG1pbmlzdHJhdGlvbi9BZG1pbmlzdHJhdGlvbkNvbnRyb2xsZXIuanMiLCJDb250cm9sbGVycy9BZG1pbmlzdHJhdGlvbi9TZXJ2ZXJDb250cm9sbGVyLmpzIiwiQ29udHJvbGxlcnMvQ29tbW9uL01vZGFsc0NvbnRyb2xsZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsR0FBQSxLQUFBLFFBQUEsT0FBQSxTQUNBLGFBQ0EsZUFDQSxpQkFDQSxjQUlBLFFBQUEsdUJBQUEsU0FBQSxHQUNBLEVBQUEsWUFBQSxNQUNBLEVBQUEsVUFBQSxRQ1ZBLEtBQUEsUUFBQSxjQUFBLFlBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxxQkFDQSxPQUFBLE9BQUEsTUFBQSxTQUFBLFFDRkEsSUFBQSxXQUFBLGFBQUEsU0FBQSxTQUFBLEdBRUEsRUFBQSxVQUVBLFFBQUEsVUFDQSxNQUFBLFlBR0EsUUFBQSxnQkFDQSxNQUFBLGtCQUdBLFFBQUEsUUFDQSxNQUFBLFVBR0EsUUFBQSxRQUNBLE1BQUEsYUFLQSxRQUFBLGlCQUFBLHFCQUFBLFNBQUEsRUFBQSxHQUdBLEVBQUEsVUFBQSxZQUdBLEVBQUEsTUFBQSxXQUNBLElBQUEsV0FDQSxZQUFBLGdDQUNBLE1BQUEsaUJBQ0EsSUFBQSxpQkFDQSxZQUFBLHNDQUNBLE1BQUEsU0FDQSxJQUFBLFNBQ0EsWUFBQSw4QkFDQSxNQUFBLFNBQ0EsSUFBQSxTQUNBLFlBQUEsaUNDdkNBLElBQUEsV0FBQSxtQkFBQSxTQUFBLFNBQUEsYUFBQSxTQUFBLEVBQUEsRUFBQSxHQUNBLEVBQUEsTUFBQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLEVBQUEsTUFDQSxFQUFBLFFBQUEsRUFBQSxPQUlBLEVBQUEsTUFBQSxXQUFBLGNBRUEsRUFBQSxLQUFBLFdBRUEsUUFBQSxJQUFBLEVBQUEsS0FDQSxJQUFBLEdBQUEsRUFBQSxNQUNBLFlBQUEsc0JBQ0EsV0FBQSxvQkFDQSxTQUNBLEtBQUEsV0FDQSxNQUFBLEdBQUEsUUFLQSxHQUFBLE9BQUEsS0FBQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLElBQ0EsV0FDQSxRQUFBLElBQUEsdUJBQUEsR0FBQSxhQ3pCQSxJQUFBLFdBQUEscUJBQUEsU0FBQSxpQkFBQSxPQUFBLFNBQUEsRUFBQSxFQUFBLEdBRUEsRUFBQSxLQUFBLEVBRUEsRUFBQSxHQUFBLFdBQ0EsRUFBQSxNQUFBLEVBQUEsT0FHQSxFQUFBLE9BQUEsV0FDQSxFQUFBLFFBQUEiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnbWNVQVAnLCBbXHJcbiAgICAnbmdSZXNvdXJjZScsXHJcbiAgICAndWkuYm9vdHN0cmFwJyxcclxuICAgICd1aS5yb3V0ZXIudGFicycsXHJcbiAgICAndWkucm91dGVyJ1xyXG4gICAgXSlcclxuXHJcblxyXG4gICAgLmNvbmZpZyhmdW5jdGlvbiAoJGludGVycG9sYXRlUHJvdmlkZXIpIHtcclxuICAgICAgICAkaW50ZXJwb2xhdGVQcm92aWRlci5zdGFydFN5bWJvbCgnW1snKTtcclxuICAgICAgICAkaW50ZXJwb2xhdGVQcm92aWRlci5lbmRTeW1ib2woJ11dJyk7XHJcbiAgICB9KTsiLCJhcHAuZmFjdG9yeSgnU2VydmVyc0FwaScsIGZ1bmN0aW9uKCRyZXNvdXJjZSl7XHJcbiAgICByZXR1cm4gJHJlc291cmNlKFwiL2FwaS92MS9zZXJ2ZXJcIiwge30sIHtcclxuICAgICAgICBxdWVyeTogeyBtZXRob2Q6IFwiR0VUXCIsIGlzQXJyYXk6IGZhbHNlIH1cclxuICAgIH0pO1xyXG4gICAgfSk7IiwiYXBwLmNvbnRyb2xsZXIoXCJBZG1pbkN0cmxcIiwgZnVuY3Rpb24oJHNjb3BlKSB7XHJcblxyXG4gICAgJHNjb3BlLnRhYkRhdGEgICA9IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGhlYWRpbmc6ICdTZXJ2ZXJzJyxcclxuICAgICAgICAgICAgcm91dGU6ICAgJ3NlcnZlcnMnXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGhlYWRpbmc6ICdTdWJzY3JpcHRpb25zJyxcclxuICAgICAgICAgICAgcm91dGU6ICAgJ3N1YnNjcmlwdGlvbnMnXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGhlYWRpbmc6ICdVc2VycycsXHJcbiAgICAgICAgICAgIHJvdXRlOiAgICd1c2VycydcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaGVhZGluZzogJ1JvbGVzJyxcclxuICAgICAgICAgICAgcm91dGU6ICAgJ3JvbGVzJ1xyXG4gICAgICAgIH1cclxuICAgIF07XHJcblxyXG5cclxufSkuY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcclxuICAgIC8vXHJcbiAgICAvLyBGb3IgYW55IHVubWF0Y2hlZCB1cmwsIHJlZGlyZWN0IHRvIC9zdGF0ZTFcclxuICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoXCIvc2VydmVyc1wiKTtcclxuICAgIC8vXHJcbiAgICAvLyBOb3cgc2V0IHVwIHRoZSBzdGF0ZXNcclxuICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdzZXJ2ZXJzJywge1xyXG4gICAgICAgIHVybDogJy9zZXJ2ZXJzJyxcclxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2FkbWluL3NlcnZlcnMuaHRtbCdcclxuICAgIH0pLnN0YXRlKCdzdWJzY3JpcHRpb25zJywge1xyXG4gICAgICAgIHVybDogJy9zdWJzY3JpcHRpb25zJyxcclxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2FkbWluL3N1YnNjcmlwdGlvbnMuaHRtbCdcclxuICAgIH0pLnN0YXRlKCd1c2VycycsIHtcclxuICAgICAgICB1cmw6ICcvdXNlcnMnLFxyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAncGFydGlhbHMvYWRtaW4vdXNlcnMuaHRtbCdcclxuICAgIH0pLnN0YXRlKCdyb2xlcycsIHtcclxuICAgICAgICB1cmw6ICcvcm9sZXMnLFxyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAncGFydGlhbHMvYWRtaW4vcm9sZXMuaHRtbCdcclxuICAgIH0pO1xyXG5cclxufSk7IiwiYXBwLmNvbnRyb2xsZXIoXCJTZXJ2ZXJJbmRleEN0cmxcIiwgZnVuY3Rpb24oJHNjb3BlLCAkbW9kYWwsIFNlcnZlcnNBcGkpIHtcclxuICAgIFNlcnZlcnNBcGkucXVlcnkoZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YSk7XHJcbiAgICAgICAgJHNjb3BlLnNlcnZlcnMgPSBkYXRhLmRhdGE7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgJHNjb3BlLmRhdGEgPSB7XCJzZXJ2ZXJuYW1lXCI6IFwidGVzdGluZy4uLlwifTtcclxuXHJcbiAgICAkc2NvcGUub3BlbiA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coJHNjb3BlLmRhdGEpO1xyXG4gICAgICAgIHZhciBtb2RhbEluc3RhbmNlID0gJG1vZGFsLm9wZW4oe1xyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ0FkZFNlcnZlck1vZGFsLmh0bWwnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnTW9kYWxJbnN0YW5jZUN0cmwnLFxyXG4gICAgICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgICAgICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRzY29wZS5kYXRhO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIG1vZGFsSW5zdGFuY2UucmVzdWx0LnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxufSk7IiwiYXBwLmNvbnRyb2xsZXIoJ01vZGFsSW5zdGFuY2VDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UsIGRhdGEpIHtcclxuXHJcbiAgICAkc2NvcGUuZGF0YSA9IGRhdGE7XHJcblxyXG4gICAgJHNjb3BlLm9rID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICRtb2RhbEluc3RhbmNlLmNsb3NlKCRzY29wZS5kYXRhKTtcclxuICAgIH07XHJcblxyXG4gICAgJHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcclxuICAgIH07XHJcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==